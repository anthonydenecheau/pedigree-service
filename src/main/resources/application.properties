# Configuration file
# key = value
%local.quarkus.http.port=8085
%dev.quarkus.http.port=8080
%qa.quarkus.http.port=8080
%prod.quarkus.http.port=8080

# Native executable
quarkus.native.native-image-xmx=4G
quarkus.native.enable-https-url-handler=true
quarkus.native.report-exception-stack-traces=true

# Security configurations
%local.quarkus.oidc.auth-server-url=http://localhost:8080/auth/realms/ws
%local.quarkus.oidc.client-id=ws-pedigree-app
%local.quarkus.oidc.credentials.secret=65bee5e5-a06c-444f-bbd7-27e75cb3a05d
%local.quarkus.http.cors=true
%local.quarkus.keycloak.policy-enforcer.enable=true

%dev.quarkus.oidc.auth-server-url=${URL_TO_KEYCLOAK}
%dev.quarkus.oidc.client-id=ws-pedigree-app
%dev.quarkus.oidc.credentials.secret=cebc914a-e582-44f4-af6c-61bcf8b9eab5
%dev.quarkus.http.cors=true
%dev.quarkus.keycloak.policy-enforcer.enable=true

%qa.quarkus.oidc.auth-server-url=${URL_TO_KEYCLOAK}
%qa.quarkus.oidc.client-id=ws-pedigree-app
%qa.quarkus.oidc.credentials.secret=cebc914a-e582-44f4-af6c-61bcf8b9eab5
%qa.quarkus.http.cors=true
%qa.quarkus.keycloak.policy-enforcer.enable=true

%prod.quarkus.oidc.auth-server-url=${URL_TO_KEYCLOAK}
%prod.quarkus.oidc.client-id=ws-pedigree-app
%prod.quarkus.oidc.credentials.secret=cebc914a-e582-44f4-af6c-61bcf8b9eab5
%prod.quarkus.http.cors=true
%prod.quarkus.keycloak.policy-enforcer.enable=true

# Disables policy enforcement for a path
quarkus.keycloak.policy-enforcer.paths.1.path=/public/*
quarkus.keycloak.policy-enforcer.paths.1.enforcement-mode=DISABLED

# Database
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql

%local.quarkus.hibernate-orm.database.generation = update
%local.quarkus.hibernate-orm.sql-load-script = alter.sql

%dev.quarkus.hibernate-orm.database.generation = drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script = update.sql

%qa.quarkus.hibernate-orm.database.generation = update
%qa.quarkus.hibernate-orm.sql-load-script = create-update.sql

%prod.quarkus.hibernate-orm.database.generation = none
%prod.quarkus.hibernate-orm.sql-load-script = no-file

# Connection
%local.quarkus.datasource.url = jdbc:postgresql://localhost:5432/pedigree
%local.quarkus.datasource.driver = org.postgresql.Driver
%local.quarkus.datasource.username = pedigree
%local.quarkus.datasource.password = pedigree
%local.quarkus.hibernate-orm.log.sql = true

%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/${DATASOURCE_DBNAME}
%dev.quarkus.datasource.driver=org.postgresql.Driver
%dev.quarkus.datasource.username=${DATASOURCE_USER}
%dev.quarkus.datasource.password=${DATASOURCE_PWD}

%qa.quarkus.datasource.db-kind=postgresql
%qa.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/${DATASOURCE_DBNAME}
%qa.quarkus.datasource.driver=org.postgresql.Driver
%qa.quarkus.datasource.username=${DATASOURCE_USER}
%qa.quarkus.datasource.password=${DATASOURCE_PWD}

%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/${DATASOURCE_DBNAME}
%prod.quarkus.datasource.driver=org.postgresql.Driver
%prod.quarkus.datasource.username=${DATASOURCE_USER}
%prod.quarkus.datasource.password=${DATASOURCE_PWD}

# SocketFactory
# pending fix : cf. https://github.com/quarkusio/quarkus/issues/9985
#quarkus.datasource.jdbc.url=jdbc:postgresql:///${DATASOURCE_DBNAME}
#quarkus.datasource.additional-jdbc-properties.socketFactory=com.google.cloud.sql.postgres.SocketFactory
#quarkus.datasource.additional-jdbc-properties.cloudSqlInstance=${DATASOURCE_URL}

# Type Hibernate (MyJsonType)
quarkus.index-dependency.hibernate.group-id=org.hibernate
quarkus.index-dependency.hibernate.artifact-id=hibernate-core

# swagger
quarkus.swagger-ui.path=/public/documentation
# default endpoint location /openapi
quarkus.smallrye-openapi.path=/public/openapi
# make it available in production
quarkus.swagger-ui.always-include=true

# parametres applicatifs

# monitoring access
# try (-1 : disable)
access.max.attempt=10
# time (minute) before new attempt
access.recovery.attempt=5
# authentication key
%local.access.authentication.key=12345
%dev.access.authentication.key=${AUTHENTICATION_KEY}
%qa.access.authentication.key=${AUTHENTICATION_KEY}
%prod.access.authentication.key=${AUTHENTICATION_KEY}

level.generation=5